version: "3.8"

networks:
  internet:
    external: true
  no-internet:
    internal: true

services:
  nginx:
    image: rpardini/nginx-proxy-connect-stable-alpine:nginx-1.20.1-alpine-3.12.7
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.conf:ro"
    ports:
      - "8081:80"
      - "8082:82"
    networks:
      - internet
      - no-internet
    restart: unless-stopped
    depends_on:
        - client
  yarp:
    image: proxy-yarp:local
    build:
      context: ./src/Proxy.Forwarder.PoC.Yarp
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      CONFIG_CORS__ALLOWEDORIGINS__3: "http://proxy:8080"
      CONFIG_CORS__ALLOWEDORIGINS__4: "http://client:30000"
      CONFIG_CORS__ALLOWEDORIGINS__5: "http://nginx:82"
      CONFIG_FORWARDER__ACTIVITYTIMEOUTINSECONDS: 100
      CONFIG_FORWARDER__CONNECTTIMEOUTINSECONDS: 15
    ports:
      - "8080:8080"
    networks:
      - internet
      - no-internet
    restart: unless-stopped
  client:
    image: proxy-client:local
    build:
      context: ./src/Proxy.Forwarder.PoC.Client
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      CONFIG_CORS__ALLOWEDORIGINS__2: "http://proxy:8080"
      CONFIG_YARP__BASEADDRESS: http://yarp:8080
      CONFIG_YARP__HEALTHCHECKADDRESS: http://yarp:8080/hc
      CONFIG_NGINX__BASEADDRESS: http://nginx:80/proxy
      CONFIG_NGINX__HEALTHCHECKADDRESS: http://nginx:80/hc
    ports:
      - "30000:30000"
    networks:
      - no-internet
    restart: unless-stopped
